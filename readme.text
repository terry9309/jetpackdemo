

Hilt Use:

      step1  --->   build.gradle

        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.28-alpha'



      step2  ---> build.gradle(app)


        apply plugin: 'kotlin-kapt'
        apply plugin: 'dagger.hilt.android.plugin'

        implementation "com.google.dagger:hilt-android:2.28-alpha"
        kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"





      step 3
      @HiltAndroidApp   --->(MyApplication)



      step:4 (需要注入的对象)
      data  class Person constructor(val name:String,val age:Int) {
           @Inject
           constructor():this("terry",18)
      }


      step:5  (需要注入的地方)
      @AndroidEntryPoint ---> HiltActivity


      step:6  （注入）
      @Inject
      lateinit var p:Person









     ===============================>>>>>>>>>>>>>>>>


     LiveData:

          Use1:  LiveData 的简单使用

          Use2:  LiveData 模仿微信的消息推送机制，当activity 不可见时不更新消息列表，只接受推送消息
                 从而证明LiveData 对界面生命周期的感应能力


          Use3:  LiveData 在LiveDataUse3Activity 中对msg 的值进行了修改，再跳转到LiveDataNextActivity 中去注册监听

                 却发现接收到了之前在LiveDataUse3Activity 中修改的值，这就是"数据倒灌"的现象











